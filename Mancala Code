#copy and paste your code from the previous exercise
#copy and paste your code from the previous exercise
# create your board variable
board = [0, 4, 4, 4, 4, 4, 4,  0  , 4, 4, 4, 4, 4, 4]
# create your print_board function
def print_board():
    print("            13      12      11      10      9      8")
    print("----------------------------------------------------------------")
    print(" B:         %d       %d       %d       %d       %d      %d" % (board[13], board[12], board[11], board[10], board[9], board[8]))
    print("     %d                                                     %d  " % (board[0], board[7]))
    print(" A:         %d       %d       %d       %d       %d      %d" % (board[1], board[2], board[3], board[4], board[5], board[6]))
    print("----------------------------------------------------------------")
    print("            1       2       3       4       5      6")
#call your print_board function
store_finisher = ''
fixed_slot = 0
player_turn = 'A'
stores_B = [13, 12, 11, 10, 9, 8]
stores_A = [1, 2, 3, 4, 5, 6]
print_stores_B = [8, 9, 10, 11, 12, 13]
def valid_slot(player, slot):
    global board
    global player_turn
    global stores_A
    global stores_B
    global print_stores_B
    global chosen_slot
    global fixed_slot
    if player == 'A' and slot >= 1 and slot <= 6:
        if board[slot] != 0:
            return slot
        else:
            print("Please enter a valid move.")
            print()
            print()
            fixed_slot = int(input("Choose a pocket: "))
            return valid_slot(player_turn, fixed_slot)
    elif player == 'B' and slot >= 8 and slot <= 13:
        if board[slot] != 0:
            return slot
        else:
            print("Please enter a valid move.")
            print()
            print()
            fixed_slot = int(input("Choose a pocket: "))
            return valid_slot(player_turn, fixed_slot)
    else:
        print("Please enter a valid move.")
        print()
        print()
        fixed_slot = int(input("Choose a pocket: "))
        return valid_slot(player_turn, fixed_slot)

def move_stones(validated_slot):
    global board
    global player_turn
    global stores_A
    global stores_B
    global print_stores_B
    global chosen_slot
    
    if player_turn == 'A':
        pieces_in_hand = board[validated_slot]
        board[validated_slot] = 0
        moves = pieces_in_hand
        for i in range(moves):
            validated_slot += 1
            pieces_in_hand -= 1
            if pieces_in_hand != 0:
                if validated_slot == 14:
                    board[1] += 1
                    validated_slot = 1
                else:
                    board[validated_slot] += 1
            else:
                if validated_slot == 14:
                    validated_slot == 1
                if validated_slot >= 1 and validated_slot <= 6:
                    for e in range(6):
                        if stores_A[e] == validated_slot and board[validated_slot] == 0:
                                board[7] += board[stores_B[e]] + 1
                                board[stores_B[e]] = 0
                                if game_over() == '':
                                    print("It is Player B's turn!")
                                    print_board()
                                player_turn = 'B'
                                return ""
                        if e == 5:
                            board[validated_slot] += 1
                            if game_over() == '':
                                print("It is Player B's turn!")
                                print_board()
                            player_turn = 'B'
                            return ""
                elif validated_slot == 7:
                    board[7] += 1
                    if game_over() == '':
                        print("Go again Player A!")
                        print_board()
                    return ""
                else:
                    board[validated_slot] += 1
                    if game_over() == '':
                        print("It is Player B's turn!")
                        print_board()
                    player_turn = 'B'
                    return ""
    else:
        pieces_in_hand = board[validated_slot]
        board[validated_slot] = 0
        moves = pieces_in_hand
        for i in range(moves):
            validated_slot += 1
            pieces_in_hand -= 1
            if pieces_in_hand != 0:
                if validated_slot == 14:
                    board[0] += 1
                    validated_slot = 0
                else:
                    board[validated_slot] += 1
            else:
                if validated_slot == 14:
                    validated_slot = 0
                if validated_slot >= 8 and validated_slot <= 13:
                    for e in range(6):
                        if stores_B[e] == validated_slot and board[validated_slot] == 0:
                                board[0] += board[stores_A[e]] + 1
                                board[stores_A[e]] = 0
                                if game_over() == '':
                                    print("It is Player A's turn!")
                                    print_board()
                                player_turn = 'A'
                                return ""
                        if e == 5:
                            board[validated_slot] += 1
                            if game_over() == '':
                                print("It is Player A's turn!")
                                print_board()
                            player_turn = 'A'
                            return ""
                elif validated_slot == 0:
                    board[0] += 1
                    if game_over() == '':
                        print("Go again Player B!")
                        print_board()
                    return ""
                else:
                    board[validated_slot] += 1
                    if game_over() == '':
                        print("It is Player A's turn!")
                        print_board()
                    player_turn = 'A'
                    return ""
def take_turn():
    global board
    global player_turn
    global stores_A
    global stores_B
    global print_stores_B
    global chosen_slot
    global fixed_slot
    possible_stores = ""
    if player_turn == 'A': 
        for x in range(6):
            if board[stores_A[x]] > 0:
                possible_stores += str(stores_A[x]) + " "
    else:
        for y in range(6):
            if board[stores_B[y]] > 0:
                possible_stores += str(stores_B[y]) + " "
    print("Possible moves: " + possible_stores)
    fixed_slot = int(input("Choose a pocket: "))
    print()
    print()
    validity = valid_slot(player_turn, fixed_slot)
    move_stones(validity)
    
def game_over():
    global stores_A
    global stores_B
    global board
    global store_finisher
    printer = ""
    game_over = True
    for i in range(6):
        if board[i + 1] != 0:
            game_over = False
    if game_over == True:
        store_finisher = 'A'
    return store_finisher
    for e in range(6):
        if board[e + 8] != 0:
            game_over = False
    if game_over == False:
        store_finisher = 'B'
    return store_finisher

def calculate_winner():
    global board
    global store_finisher
    if store_finisher == 'A':
        for i in range(6):
            board[0] += board[stores_B[i]]
    else:
        for i in range(6):
            board[7] += board[stores_A[i]]
    if board[0] > board[7]:
        print("PLAYER B WINS!")
    elif board[0] < board[7]:
        print("PLAYER A WINS")
    else:
        print("TIE!")
           
print_board()    
while game_over() == '':
    take_turn()
calculate_winner()
